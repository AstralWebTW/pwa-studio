// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.addLazyReactComponentImport() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "after": "{ lazy as reactLazy } from 'react';
",
    "insert": "const DynamicBlerg$1 = reactLazy(() => import('./path/to/dynamic/component'));
",
  },
  "transformModule": "@magento/pwa-buildpack/lib/WebpackTools/loaders/splice-source-loader",
  "type": "source",
}
`;

exports[`JSX manipulation .appendJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "span className={classes.icon}",
    "operation": "append",
    "params": Object {
      "jsx": "<AnotherEmoji />",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .insertAfterJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "<Message>",
    "operation": "insertAfter",
    "params": Object {
      "jsx": "<Rakim />",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .insertBeforeJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "<Message>",
    "operation": "insertBefore",
    "params": Object {
      "jsx": "<EricB and={and} />",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .prependJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "<span className={classes.icon} />",
    "operation": "prepend",
    "params": Object {
      "jsx": "<AnEmoji/>",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .removeJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "AnotherEmoji",
    "operation": "remove",
    "params": undefined,
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .removeJSXProps() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "BasicCheckbox",
    "operation": "removeProps",
    "params": Object {
      "props": Array [
        "fieldState",
        "id",
      ],
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .replaceJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "span className={classes.label}",
    "operation": "replace",
    "params": Object {
      "jsx": "<i>where is label oh no</i>",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .setJSXProps() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "BasicCheckbox",
    "operation": "setProps",
    "params": Object {
      "props": Object {
        "className": "{classes.wildin}",
        "key": "{NUMBER}",
      },
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation .surroundJSX() 1`] = `
Object {
  "fileToTransform": "/path/to/Checkbox.js",
  "options": Object {
    "element": "label",
    "operation": "surround",
    "params": Object {
      "jsx": "<fieldset></fieldset>",
    },
  },
  "transformModule": "/Volumes/CaseSensitive/pwa-studio/packages/pwa-buildpack/lib/WebpackTools/targetables/BabelModifyJSXPlugin/index.js",
  "type": "babel",
}
`;

exports[`JSX manipulation really ties the room together 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Checkbox = Checkbox;

var _react = require(\\"react\\");

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Checkbox(props) {
  const {
    classes,
    fieldState,
    id,
    label,
    message
  } = props,
        rest = _objectWithoutProperties(props, [\\"classes\\", \\"fieldState\\", \\"id\\", \\"label\\", \\"message\\"]);

  const {
    value: checked
  } = fieldState;
  const icon = checked ? checkedIcon : uncheckedIcon;
  return React.createElement(Fragment, null, React.createElement(\\"fieldset\\", null, React.createElement(\\"label\\", {
    className: classes.root,
    htmlFor: id
  }, React.createElement(BasicCheckbox, _extends({}, rest, {
    className: classes.wildin,
    key: NUMBER
  })), React.createElement(\\"span\\", {
    className: classes.icon
  }, React.createElement(AnEmoji, null), icon), React.createElement(\\"i\\", null, \\"where is label oh no\\"))), React.createElement(EricB, {
    and: and
  }), React.createElement(Message, {
    fieldState: fieldState
  }, message), React.createElement(Rakim, null));
}"
`;
